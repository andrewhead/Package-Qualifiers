---
# Source: http://www.webupd8.org/2012/09/install-oracle-java-8-in-ubuntu-via-ppa.html
- name: Enable JDK auto-installation
  shell: echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
  tags: systempkgs
  become: true

- name: Add repository for installing JDK 1.8
  apt_repository: repo='ppa:webupd8team/java' update_cache=yes
  tags: systempkgs
  become: true

- name: Install server software
  apt: name={{ item }} update_cache=yes
  with_items:
  - git
  - python-pip
  - python-boto
  - python-dev
  - libncurses5-dev
  - oracle-java8-installer
  tags: systempkgs
  become: true

- name: Create group for administering application
  group: name={{ groupname }}
  tags: users
  become: true

- name: Add users to admin group
  user: name={{ item }} groups={{ groupname }} append=yes
  with_items: "{{ group_users }}"
  tags: users
  become: true

- name: Create project directory
  file: state=directory path={{ projectdir }} owner={{ ansible_ssh_user }} group={{ groupname }}
  become: true

- name: Create data directory
  file: state=directory path={{ code_data }} owner={{ ansible_ssh_user }} group={{ groupname }}
  become: true

- name: Create log directory
  file: state=directory path={{ logdir }} owner={{ ansible_ssh_user }} group={{ groupname }}
  become: true

- name: Install virtualenv
  pip: name=virtualenv
  become: true

- name: Transfer Python dependencies list
  copy: src={{ appname }}-reqs.txt dest={{ projectdir }}
  tags: pythonpkgs

- name: Install server Python dependencies
  pip: requirements={{ projectdir }}/{{ appname }}-reqs.txt virtualenv={{ venv }}
  tags: pythonpkgs

- name: Checkout source code
  git: repo={{ repo }} dest={{ src }} force=yes recursive=yes
  tags: updatecode

- name: Assign source code permissions to full group
  file: state=directory path={{ src }} group={{ groupname }} recurse=yes
  tags: updatecode

- name: Fetch PostgreSQL configuration
  s3: bucket={{ privatebucket }} object={{ postgres_config }} dest={{ src }}/{{ postgres_config }} mode=get
      aws_access_key={{ aws_access_key_id }} aws_secret_key={{ aws_secret_access_key }}
